local constants = require('lolloArrivalsDeparturesPredictor.constants')
local constructionConfigs = require('lolloArrivalsDeparturesPredictor.constructionConfigs')
local constructionHelpers = require('lolloArrivalsDeparturesPredictor.constructionHelpers')

local _styles = { 'platform_departures_board', 'platform_departures_board_floating', }
local _colourSchemes = { 'orange_on_black', 'white_on_blue', 'white_on_blue_black', 'white_on_blue_white', 'black_on_white' }
local _paramPrefix = constructionConfigs.getParamPrefixFromCon()

local function _getParamName(name)
    -- return constants.paramPrefix .. name
    return _paramPrefix .. name
end

local function _getMdl(params)
    local _style = _styles[params[_getParamName('style')] + 1]
    local _colourSchemeParamValue = params[_getParamName('colourScheme')] + 1

    local colourSchemeSuffix = ''
    if _colourSchemeParamValue > 1 then colourSchemeSuffix = '_' .. _colourSchemes[_colourSchemeParamValue] end
    return 'lolloArrivalsDeparturesPredictor/' .. _style .. colourSchemeSuffix .. '.mdl'
end

local function _getParams()
    local params = {
        {
            key = _getParamName('style'),
            name = _('Style'),
            uiType = 'ICON_BUTTON',
            values = constructionHelpers.getIcons(_styles)
        },
        {
            key = _getParamName('colourScheme'),
            name = _('ColourScheme'),
            uiType = 'ICON_BUTTON',
            values = constructionHelpers.getIcons(_colourSchemes)
        },
        {
            key = _getParamName('align2Platform'),
            name = _('Align2Platform'),
            values = { _('No'), _('Yes') },
            defaultIndex = 1
        },
        {
            key = _getParamName('absoluteTime'),
            name = _('TimeDisplay'),
            uiType = 'ICON_BUTTON',
            values = constructionHelpers.getIcons({'relative_time', 'absolute_time'}),
        },
        {
            key = _getParamName('showIntermediateDestinations'),
            name = _('ShowIntermediateDestinations'),
            values = { _('No'), _('Yes') },
        },
    }
    constructionHelpers.addTerminalOverrideParam(params, _getParamName)

    return params
end

function data()
    return {
        type = 'ASSET_TRACK',
        -- type = 'ASSET_DEFAULT',
        description = {
            name = _('PlatformDeparturesDisplayName'),
            description = _('PlatformDeparturesDisplayDesc'),
            icon = 'ui/construction/asset/lolloArrivalsDeparturesPredictor/platform_departures_display@2x.tga'
        },
        availability = {},
        buildMode = 'SINGLE',
        categories = { 'displays' },
        order = 13,
        skipCollision = true,
        autoRemovable = false,
        -- snapping = {
        --     rail = true, -- LOLLO NOTE you can also use this, sticking to the Y offset but reducing the Z offset.
        -- however, the construction mover will give an unpleasant jolt when doing the first Z adjustment.
        -- nothing much, but why make it less pleasant?
        --     road = false,
        --     water = false,
        -- },
        params = _getParams(),
        updateFn = function(params)
            local result = {
                groundFaces = constructionHelpers.getDummyGroundFaces(),
                models = {},
                terrainAlignmentLists = constructionHelpers.getDummyTerrainAlignmentLists(),
            }

            local _align = params[_getParamName('align2Platform')] or 1
            local _transf = _align == 0
                and { 1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, 0, 1 }
                or { 1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, -3.7, 1.7, 1 }
            result.models[#result.models + 1] = {
                id = _getMdl(params),
                transf = _transf
            }
            -- result.models[#result.models + 1] = {
            --     id = 'lolloArrivalsDeparturesPredictor/icon/blue.mdl',
            --     transf = {1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, 0, 1}
            -- }

            return result
        end,
        upgradeFn = function(_)
        end
    }
end
